[{"/home/thand/Projects/mesd-component-library/src/index.js":"1","/home/thand/Projects/mesd-component-library/src/components/Grid/Grid.js":"2","/home/thand/Projects/mesd-component-library/src/components/Grid/SearchBox.js":"3","/home/thand/Projects/mesd-component-library/src/components/Grid/Table.js":"4","/home/thand/Projects/mesd-component-library/src/components/Grid/Column.js":"5","/home/thand/Projects/mesd-component-library/src/components/Grid/SortIcon.js":"6","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Text.js":"7","/home/thand/Projects/mesd-component-library/src/components/Grid/LoadingRow.js":"8","/home/thand/Projects/mesd-component-library/src/components/Grid/Paginator.js":"9","/home/thand/Projects/mesd-component-library/src/components/Training/TrainingViewer.js":"10","/home/thand/Projects/mesd-component-library/src/components/Media/MediaViewer.js":"11","/home/thand/Projects/mesd-component-library/src/components/Media/Pdf.js":"12","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Boolean.js":"13","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Money.js":"14","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Date.js":"15","/home/thand/Projects/mesd-component-library/src/stories/Media/Pdf.stories.js":"16","/home/thand/Projects/mesd-component-library/src/stories/Grid/Grid.stories.js":"17","/home/thand/Projects/mesd-component-library/src/stories/Training/TrainingViewer.stories.js":"18","/home/thand/Projects/mesd-component-library/src/stories/Media/MediaViewer.stories.js":"19","/home/thand/Projects/mesd-component-library/src/stories/Grid/SearchBox.stories.js":"20","/home/thand/Projects/mesd-component-library/src/stories/Grid/Paginator.stories.js":"21","/home/thand/Projects/mesd-component-library/src/components/Grid/SortSelector.js":"22","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Actions.js":"23","/home/thand/Projects/mesd-component-library/src/stories/Grid/ApolloGrid.stories.js":"24","/home/thand/Projects/mesd-component-library/src/components/Grid/ApolloGrid.js":"25"},{"size":849,"mtime":1611554762850,"results":"26","hashOfConfig":"27"},{"size":2506,"mtime":1611643043410,"results":"28","hashOfConfig":"27"},{"size":1700,"mtime":1611457204040,"results":"29","hashOfConfig":"27"},{"size":1557,"mtime":1611408910890,"results":"30","hashOfConfig":"27"},{"size":1236,"mtime":1611453744620,"results":"31","hashOfConfig":"27"},{"size":263,"mtime":1611340361180,"results":"32","hashOfConfig":"27"},{"size":328,"mtime":1611398164920,"results":"33","hashOfConfig":"27"},{"size":687,"mtime":1611355811760,"results":"34","hashOfConfig":"27"},{"size":2024,"mtime":1611451038840,"results":"35","hashOfConfig":"27"},{"size":229,"mtime":1611390240630,"results":"36","hashOfConfig":"27"},{"size":218,"mtime":1611390572450,"results":"37","hashOfConfig":"27"},{"size":186,"mtime":1611390642830,"results":"38","hashOfConfig":"27"},{"size":706,"mtime":1611398110640,"results":"39","hashOfConfig":"27"},{"size":480,"mtime":1611398151130,"results":"40","hashOfConfig":"27"},{"size":472,"mtime":1611398128660,"results":"41","hashOfConfig":"27"},{"size":331,"mtime":1611416731550,"results":"42","hashOfConfig":"27"},{"size":3121,"mtime":1611493187070,"results":"43","hashOfConfig":"27"},{"size":372,"mtime":1611416739450,"results":"44","hashOfConfig":"27"},{"size":357,"mtime":1611416735420,"results":"45","hashOfConfig":"27"},{"size":435,"mtime":1611461521210,"results":"46","hashOfConfig":"27"},{"size":689,"mtime":1611461477210,"results":"47","hashOfConfig":"27"},{"size":1231,"mtime":1611458891860,"results":"48","hashOfConfig":"27"},{"size":1436,"mtime":1611460644820,"results":"49","hashOfConfig":"27"},{"size":8184,"mtime":1611643529100,"results":"50","hashOfConfig":"27"},{"size":2807,"mtime":1611642951630,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"v4yxfl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},"/home/thand/Projects/mesd-component-library/src/index.js",[],["117","118"],"/home/thand/Projects/mesd-component-library/src/components/Grid/Grid.js",["119"],"/home/thand/Projects/mesd-component-library/src/components/Grid/SearchBox.js",["120"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useDebounce } from 'use-debounce';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nconst SearchBoxInputGroup = styled(InputGroup)`\n  margin-bottom: 10px;\n`;\n\nconst SearchBox = ({ onSearch }) => {\n  const [search, setSearch] = useState(\"\");\n  const [debouncedSearch] = useDebounce(search, 500);\n  const [dirty, setDirty] = useState(false);\n\n  useEffect(() => {\n    if (dirty) {\n      onSearch(debouncedSearch);\n    }\n  }, [debouncedSearch]);\n\n  const onSearchTextChanged = (event) => {\n    setDirty(true);\n    setSearch(event.target.value);\n  }\n\n  const onSearchTextCleared = () => {\n    setSearch(\"\");\n  }\n\n  return (\n    <form onSubmit={(e) => {\n      return e.preventDefault();\n    }}>\n      <SearchBoxInputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n        </InputGroup.Prepend>\n\n        <FormControl\n          onChange={onSearchTextChanged}\n          value={search}\n          aria-label=\"Search\"\n        />\n\n        <InputGroup.Append>\n          <Button onClick={onSearchTextCleared} variant=\"secondary\">\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n        </InputGroup.Append>\n      </SearchBoxInputGroup>\n    </form>\n  );\n}\n\nSearchBox.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n}\n\nexport default SearchBox;","/home/thand/Projects/mesd-component-library/src/components/Grid/Table.js",["121","122"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Table from 'react-bootstrap/Table';\n\nexport default styled(Table)`\n  border-collapse: collapse;\n\n  th {\n    padding: 0.7em !important;\n    border: none !important;\n  }\n\n  td {\n    padding: 0.6em !important;\n    border-bottom: 1px solid #ececec;\n  }\n\n  tr:nth-of-type(odd) {\n    td {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n\n  @media(max-width: 576px) {\n    th {\n      display: none;\n    }\n\n    td {\n      display: block;\n      max-width: none !important;\n      text-overflow: ellipsis !important;\n      overflow: hidden !important;\n      white-space: nowrap !important;\n      border-right: 1px solid #c8ced3;\n      border-left: 1px solid #c8ced3;\n      word-wrap: break-word;\n    }\n\n    td:last-child {\n      margin-bottom: 1em;\n      border-bottom: 1px solid #c8ced3;\n    }\n\n    td[data-header]:before {\n      content: attr(data-header);\n      display: block;\n      float: left;\n      width: 35%;\n      font-weight: bold;\n      text-align: left;\n    }\n\n    td.actions > .btn-group > .btn  {\n      float: right;\n    }\n\n    td[data-header] > * {\n      display: block;\n      width: 65%;\n      float: right;\n      clear: right;\n      padding-left: 1em;\n      margin-top: 0;\n      word-wrap: break-word;\n    }\n    \n    td[data-header]:after {\n      content: \"\",\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 50%;\n      border-right: 1px solid #c8ced3;\n      padding-bottom: 200%;\n      display: block;\n    }\n  }\n`;","/home/thand/Projects/mesd-component-library/src/components/Grid/Column.js",["123"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport SortIcon from './SortIcon';\nimport { faSort, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\n\nimport TextCell from './Cells/Text';\n\nexport const SORT_ASC = 'ASC';\nexport const SORT_DESC = 'DESC';\n\nconst Column = ({ name, label, sortable, sort, onSort }) => {\n  \n  \n  return (\n    <th\n      data-header={label} \n      onClick={() => {\n        if (sortable) {\n          onSort({ name, direction: (sort && sort.direction === SORT_ASC) ? SORT_DESC : SORT_ASC });\n        }\n      }\n    } scope=\"col\">\n      {label} {sortable && <SortIcon icon={(sort && sort.name === name) ? (sort.direction === SORT_ASC ? faSortUp : faSortDown ) : faSort} />}\n    </th>\n  );\n}\n\nColumn.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  sortable: PropTypes.bool,\n  sort: PropTypes.shape({\n    name: PropTypes.string,\n    direction: PropTypes.string\n  }),\n  onSort: PropTypes.func.isRequired,\n  component: PropTypes.element.isRequired,\n}\n\nColumn.defaultProps = {\n  onSearchChange: (name) => {},\n  component: TextCell,\n}\n\nColumn.SORT_ASC = SORT_ASC;\nColumn.SORT_DESC = SORT_DESC;\n\nexport default Column;","/home/thand/Projects/mesd-component-library/src/components/Grid/SortIcon.js",["124"],"import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SortIcon = styled(FontAwesomeIcon)`\n  margin-left: 0.5em;\n  color: #777777;\n  cursor: pointer;\n`;\n\nexport default SortIcon;","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Text.js",[],"/home/thand/Projects/mesd-component-library/src/components/Grid/LoadingRow.js",[],"/home/thand/Projects/mesd-component-library/src/components/Grid/Paginator.js",[],"/home/thand/Projects/mesd-component-library/src/components/Training/TrainingViewer.js",["125"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TrainingViewer = () => {\n\n  return (\n    <div></div>\n  )\n}\n\nTrainingViewer.propTypes = {\n\n}\n\nTrainingViewer.defaultProps = {\n\n}\n\nexport default TrainingViewer;","/home/thand/Projects/mesd-component-library/src/components/Media/MediaViewer.js",["126"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MediaViewer = () => {\n\n  return (\n    <div></div>\n  );\n}\n\nMediaViewer.propTypes = {\n\n}\n\nMediaViewer.defaultProps = {\n\n}\n\nexport default MediaViewer;","/home/thand/Projects/mesd-component-library/src/components/Media/Pdf.js",["127"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pdf = () => {\n\n  return (\n    <div></div>\n  );\n}\n\nPdf.propTypes = {\n\n}\n\nPdf.defaultProps = {\n\n}\n\nexport default Pdf;","/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Boolean.js",[],"/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Money.js",[],"/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Date.js",[],"/home/thand/Projects/mesd-component-library/src/stories/Media/Pdf.stories.js",["128"],"import React from 'react';\n\nimport {\n  CCard,\n  CCardBody\n} from '@coreui/react';\n\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport Pdf from '../../components/Media/Pdf';\n\nstoriesOf('PDFViewer', module)\n  .add('default', () => (<CCard><CCardBody><Pdf /></CCardBody></CCard>))","/home/thand/Projects/mesd-component-library/src/stories/Grid/Grid.stories.js",["129"],"import React, { useState } from 'react';\nimport {\n  CCard,\n  CCardBody\n} from '@coreui/react';\nimport moment from 'moment';\n\nimport { Grid, GridColumn, MoneyCell, BooleanCell, DateCell, ActionsCell, SearchBox, Paginator } from '../../index.js';\nimport { faEye, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nexport default {\n  component: Grid,\n  title: 'Grid',\n  argTypes: { \n    onView: { action: 'onView' }, \n    onEdit: { action: 'onEdit' },\n  },\n};\n\nconst Template = args => {\n  const [page, setPage] = useState(1);\n  const [sort, setSort] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const FormattedDateCell = DateCell(args.dateFormat);\n  const FormattedActionsCell = ActionsCell([\n    { icon: faEye, action: (id) => args.onView(id)},\n    { icon: faEdit, action: (id) => args.onEdit(id)},\n  ]);\n\n  let data = args.data;\n  if (search && search.length > 0) {\n    const regex = new RegExp(search, 'i', 'g');\n    data = data.filter(({ flavor }) => flavor.match(regex));\n  }\n  if (sort) {\n    data = data.sort((a, b) => sort.direction === GridColumn.SORT_ASC ? (a[sort.name] > b[sort.name] ? 1 : -1) : (a[sort.name] < b[sort.name] ? 1 : -1))\n  }\n\n  return (\n    <CCard>\n      <CCardBody>\n        <SearchBox onSearch={setSearch} />\n        <Grid {...args} data={data} page={page} sort={sort} onSort={setSort}>\n          <GridColumn name=\"id\" label=\"\" sortable={false} component={FormattedActionsCell} />\n          <GridColumn name=\"flavor\" label=\"Flavor\" sortable={true} />\n          <GridColumn name=\"cost\" label=\"Cost\" sortable={true} component={MoneyCell} />\n          <GridColumn name=\"available\" label=\"Available\" sortable={true} component={BooleanCell} />\n          <GridColumn name=\"restock\" label=\"Restock\" sortable={true} component={FormattedDateCell} />\n        </Grid>\n        <Paginator {...args} onPageChange={setPage} page={page} totalResults={data.length} />\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n  loading: false,\n  resultsPerPage: 5,\n  dateFormat: 'MMM Do YYYY',\n  data: [\n    { id: 1, flavor: 'Chocolate', cost: 3.25, available: true, restock: null },\n    { id: 2, flavor: 'Vanilla', cost: 3, available: true, restock: null },\n    { id: 3, flavor: 'Caramel', cost: -3.15, available: false, restock: moment('2035-05-10') },\n    { id: 4, flavor: 'Strawberry', cost: 3.25, available: true, restock: null },\n    { id: 5, flavor: 'Blueberry', cost: 3.25, available: true, restock: null },\n    { id: 6, flavor: 'Coconut', cost: 3.5, available: true, restock: null },\n    { id: 7, flavor: 'Lavendar', cost: -3.5, available: false, restock: moment('2033-06-18') },\n    { id: 8, flavor: 'Cookie Dough', cost: 3.75, available: true, restock: null },\n    { id: 9, flavor: 'Mint Chocolate', cost: -3.75, available: false, restock: null },\n    { id: 10, flavor: 'Birthday Cake', cost: 3.75, available: true, restock: null },\n    { id: 11, flavor: 'Chocolate Peanut Butter', cost: 3.85, available: true, restock: null },\n    { id: 12, flavor: 'Bourbon Vanilla', cost: 3.85, available: false, restock: moment('2025-10-10') },\n  ],\n}","/home/thand/Projects/mesd-component-library/src/stories/Training/TrainingViewer.stories.js",["130"],"import React from 'react';\n\nimport {\n  CCard,\n  CCardBody\n} from '@coreui/react';\n\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport TrainingViewer from '../../components/Training/TrainingViewer';\n\nstoriesOf('TrainingViewer', module)\n  .add('default', () => (<CCard><CCardBody><TrainingViewer /></CCardBody></CCard>))","/home/thand/Projects/mesd-component-library/src/stories/Media/MediaViewer.stories.js",["131"],"import React from 'react';\n\nimport {\n  CCard,\n  CCardBody\n} from '@coreui/react';\n\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\n\nimport MediaViewer from '../../components/Media/MediaViewer';\n\nstoriesOf('MediaViewer', module)\n  .add('default', () => (<CCard><CCardBody><MediaViewer /></CCardBody></CCard>))","/home/thand/Projects/mesd-component-library/src/stories/Grid/SearchBox.stories.js",["132"],"import React from 'react';\n\nimport {\n  CCard,\n  CCardBody\n} from '@coreui/react';\n\nimport SearchBox from '../../components/Grid/SearchBox';\n\nexport default {\n  component: SearchBox,\n  title: 'GridSearchBox',\n  argTypes: { onSearch: { action: 'onSearch' } }\n}\n\nconst Template = args => (\n  <CCard>\n    <CCardBody>\n      <SearchBox {...args} />\n    </CCardBody>\n  </CCard>\n)\n\nexport const Default = Template.bind({});\nDefault.args = {\n\n}","/home/thand/Projects/mesd-component-library/src/stories/Grid/Paginator.stories.js",["133"],"import React from 'react';\n\nimport {\n  CCard,\n  CCardBody,\n} from '@coreui/react';\n\nimport Paginator from '../../components/Grid/Paginator';\n\nexport default {\n  component: Paginator,\n  title: 'GridPaginator',\n  argTypes: { onPageChange: { action: 'onPageChange' } }\n}\n\nconst Template = args => (\n  <CCard>\n    <CCardBody>\n      <Paginator {...args} />\n    </CCardBody>\n  </CCard>\n);\n\nexport const Default = Template.bind({});\nDefault.args = {\n  page: 2,\n  resultsPerPage: 5,\n  totalResults: 13,\n  cursorBased: false,\n  variant: 'secondary',\n}\n\nexport const Cursor = Template.bind({});\nCursor.args = {\n  ...Default.args,\n  cursorBased: true,\n  hasNextPage: true,\n  hasPreviousPage: true, \n}","/home/thand/Projects/mesd-component-library/src/components/Grid/SortSelector.js",[],"/home/thand/Projects/mesd-component-library/src/components/Grid/Cells/Actions.js",[],"/home/thand/Projects/mesd-component-library/src/stories/Grid/ApolloGrid.stories.js",["134","135"],"/home/thand/Projects/mesd-component-library/src/components/Grid/ApolloGrid.js",["136","137","138"],"import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\n\nimport Grid from './Grid';\nimport Column from './Column';\nimport Paginator from './Paginator';\nimport SearchBox from './SearchBox';\n\nconst ApolloGrid = ({ query, children, resultsPerPage, extractRows, extractTotal, constructVariables, additionalVariables }) => {\n  const [sort, setSort] = useState(null);\n  const [search, setSearch] = useState(null);\n  const [page, setPage] = useState(1);\n\n  const { loading, error, data, fetchMore } = useQuery(query, constructVariables(page, search, sort, resultsPerPage, additionalVariables));\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (!isFirstRun.current) {\n      fetchMore({\n        query,\n        ...constructVariables(page, search, sort, resultsPerPage, additionalVariables),\n        updateQuery: (previousResult, { fetchMoreResult }) => (fetchMoreResult),\n      });\n    } else {\n      isFirstRun.current = false;\n    }\n  }, [sort, search, page])\n\n  return (\n    <>\n      <SearchBox onSearch={setSearch} />\n      <Grid loading={loading} data={loading ? [] : extractRows(data)} sort={sort} page={page} resultsPerPage={resultsPerPage} onSort={setSort} externalPagination={true}>\n        {children}\n      </Grid>\n      <Paginator page={page} onPageChange={setPage} resultsPerPage={resultsPerPage} totalResults={loading ? 0 : extractTotal(data)} />\n    </>\n  )\n}\n\nApolloGrid.propTypes = {\n  query: PropTypes.any.isRequired,\n  children: PropTypes.array,\n  resultsPerPage: PropTypes.number,\n  extractRows: PropTypes.func,\n  extractType: PropTypes.func,\n  constructVariables: PropTypes.func,\n  additionVariables: PropTypes.object,\n  fetchPolicy: PropTypes.oneOf(['network-only', 'cache-first', 'cache-only', 'cache-and-network', 'no-cache', 'standy'])\n}\n\nApolloGrid.defaultProps = {\n  additionalVariables: {},\n  resultsPerPage: 15,\n  fetchPolicy: 'network-only',\n  extractRows: (data) => {\n    let rows = [];\n    for (const property in data) {\n      if (data[property]) {\n        rows = rows.concat(data[property].edges.map(edge => (edge.node)));\n      }\n    }\n\n    return rows;\n  },\n  extractTotal: (data) => {\n    let total = 0;\n    for (const property in data) {\n      if (data[property] && data[property].pageInfo) {\n        total = total + data[property].pageInfo.total;\n      }\n    }\n\n    return total;\n  },\n  constructVariables: (page, search, sort, resultsPerPage, additionalVariables) => ({\n    variables: {\n      search: search,\n      offset: (page - 1) * resultsPerPage,\n      limit: resultsPerPage,\n      sortAttribute: sort ? sort.name : null,\n      sortDirection: sort ? sort.direction : null,\n      ...additionalVariables\n    }\n  }),\n}\n\nApolloGrid.Column = Column;\n\nexport default ApolloGrid;",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":25,"column":6,"nodeType":"149","endLine":25,"endColumn":23,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"152","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"153","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":14},{"ruleId":"143","severity":1,"message":"151","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"152","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"152","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"152","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"154","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":11,"column":1,"nodeType":"157","endLine":18,"endColumn":3},{"ruleId":"143","severity":1,"message":"154","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"143","severity":1,"message":"154","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":10,"column":1,"nodeType":"157","endLine":14,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":10,"column":1,"nodeType":"157","endLine":14,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":11,"column":1,"nodeType":"157","endLine":18,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":62,"column":12,"nodeType":"149","messageId":"160","endLine":330,"endColumn":6},{"ruleId":"143","severity":1,"message":"161","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"162","line":15,"column":20,"nodeType":"145","messageId":"146","endLine":15,"endColumn":25},{"ruleId":"147","severity":1,"message":"163","line":27,"column":6,"nodeType":"149","endLine":27,"endColumn":26,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dirty' and 'onSearch'. Either include them or remove the dependency array. If 'onSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["167"],"'React' is defined but never used.","'PropTypes' is defined but never used.","'styled' is defined but never used.","'action' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'gql' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'additionalVariables', 'constructVariables', 'fetchMore', 'query', and 'resultsPerPage'. Either include them or remove the dependency array. If 'constructVariables' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [debouncedSearch, dirty, onSearch]",{"range":"173","text":"174"},"Update the dependencies array to be: [sort, search, page, fetchMore, query, constructVariables, resultsPerPage, additionalVariables]",{"range":"175","text":"176"},[802,819],"[debouncedSearch, dirty, onSearch]",[1032,1052],"[sort, search, page, fetchMore, query, constructVariables, resultsPerPage, additionalVariables]"]